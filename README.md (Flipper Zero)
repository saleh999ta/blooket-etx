NOTICE THIS IS TAKEN FROM THE Official Flipper Zero Github Account

Flipper Zero Firmware
Flipper Zero Official Website. A simple way to explain to your friends what Flipper Zero can do.
Flipper Zero Firmware Update. Improvements for your dolphin: latest firmware releases, upgrade tools for PC and mobile devices.
User Documentation. Learn more about your dolphin: specs, usage guides, and anything you want to ask.
Developer Documentation. Dive into the Flipper Zero Firmware source code: build system, firmware structure, and more.
Contributing
Our main goal is to build a healthy and sustainable community around Flipper, so we're open to any new ideas and contributions. We also have some rules and taboos here, so please read this page and our Code of Conduct carefully.

I need help
The best place to search for answers is our User Documentation. If you can't find the answer there, check our Discord Server or our Forum. If you want to contribute to the firmware development or modify it for your own needs, you can also check our Developer Documentation.

I want to report an issue
If you've found an issue and want to report it, please check our Issues page. Make sure the description contains information about the firmware version you're using, your platform, and a clear explanation of the steps to reproduce the issue.

I want to contribute code
Before opening a PR, please confirm that your changes must be contained in the firmware. Many ideas can easily be implemented as external applications and published in the Flipper Application Catalog. If you are unsure, reach out to us on the Discord Server or the Issues page, and we'll help you find the right place for your code.

Also, please read our Contribution Guide and our Coding Style, and make sure your code is compatible with our Project License.

Finally, open a Pull Request and make sure that CI/CD statuses are all green.

Development
Flipper Zero Firmware is written in C, with some bits and pieces written in C++ and armv7m assembly languages. An intermediate level of C knowledge is recommended for comfortable programming. C, C++, and armv7m assembly languages are supported for Flipper applications.

Firmware RoadMap
Firmware RoadMap Miro Board

Requirements
Supported development platforms:

Windows 10+ with PowerShell and Git (x86_64)
macOS 12+ with Command Line tools (x86_64, arm64)
Ubuntu 20.04+ with build-essential and Git (x86_64)
Supported in-circuit debuggers (optional but highly recommended):

Flipper Zero Wi-Fi Development Board
CMSIS-DAP compatible: Raspberry Pi Debug Probe and etc...
ST-Link (v2, v3, v3mods)
J-Link
Flipper Build System will take care of all the other dependencies.

Cloning source code
Make sure you have enough space and clone the source code:

git clone --recursive https://github.com/flipperdevices/flipperzero-firmware.git
Building
Build firmware using Flipper Build Tool:

./fbt
Flashing firmware using an in-circuit debugger
Connect your in-circuit debugger to your Flipper and flash firmware using Flipper Build Tool:

./fbt flash
Flashing firmware using USB
Make sure your Flipper is on, and your firmware is functioning. Connect your Flipper with a USB cable and flash firmware using Flipper Build Tool:

./fbt flash_usb
Documentation
Flipper Build Tool - building, flashing, and debugging Flipper software
Applications, Application Manifest - developing, building, deploying, and debugging Flipper applications
Hardware combos and Un-bricking - recovering your Flipper from the most nasty situations
Flipper File Formats - everything about how Flipper stores your data and how you can work with it
Universal Remotes - contributing your infrared remote to the universal remote database
Firmware Roadmap
And much more in the Developer Documentation
Project structure
applications - Applications and services used in firmware
applications_users - Place for your additional applications and services
assets - Assets used by applications and services
documentation - Documentation generation system configs and input files
furi - Furi Core: OS-level primitives and helpers
lib - Our and 3rd party libraries, drivers, tools and etc...
site_scons - Build system configuration and modules
scripts - Supplementary scripts and various python libraries
targets - Firmware targets: platform specific code
Also, see ReadMe.md files inside those directories for further details.

Links
Discord: flipp.dev/discord
Website: flipperzero.one
Forum: forum.flipperzero.one
Kickstarter: kickstarter.com
SAST Tools
PVS-Studio - static analyzer for C, C++, C#, and Java code.
